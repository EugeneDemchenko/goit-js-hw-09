{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAOC,SAASC,cAAc,SAC9BC,EAAYF,SAASC,cAAc,kBACnCE,EAAWH,SAASC,cAAc,iBAClCG,EAAaJ,SAASC,cAAc,mBAK1C,SAASI,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACLN,GACFI,EAAQ,CAAEN,WAAUC,UAEtBM,EAAO,CAAEP,WAAUC,YAClBA,MAXPR,EAAKgB,iBAAiB,UAgBtB,SAAqBC,GACnBA,EAAIC,iBAIJ,IAHF,IAAIC,EAAaC,OAAOjB,EAAUkB,OAC5BC,EAAYF,OAAOhB,EAASiB,OAC5BE,EAAcH,OAAOf,EAAWgB,OAC3BG,EAAI,EAAGA,EAAID,EAAc,EAAGC,GAAK,EACxClB,EAAckB,EAAGL,GACdM,MAAK,SAAAC,G,IAAGnB,EAAQmB,EAARnB,SAAUC,EAAKkB,EAALlB,MACjBV,EAAA6B,OAAOC,QAAQ,uBAAwCC,OAAftB,EAAS,QAAYsB,OAANrB,EAAM,OAC3DsB,QAAMC,IAAI,uBAAwCF,OAAftB,EAAS,QAAYsB,OAANrB,EAAM,UAE3DwB,OAAM,SAAAN,G,IAAGnB,EAAQmB,EAARnB,SAAUC,EAAKkB,EAALlB,MAClBV,EAAA6B,OAAOM,QAAQ,sBAAuCJ,OAAftB,EAAS,QAAYsB,OAANrB,EAAM,OAC1DsB,QAAMC,IAAI,sBAAuCF,OAAftB,EAAS,QAAYsB,OAANrB,EAAM,UAE7DW,GAAcG,EAEhBQ,QAAQC,IAAIZ,GACZW,QAAQC,IAAIT,GACZQ,QAAQC,IAAIR,M","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst form = document.querySelector('.form');\nconst delayForm = document.querySelector('[name=\"delay\"]');\nconst stepForm = document.querySelector('[name=\"step\"]');\nconst amountForm = document.querySelector('[name=\"amount\"]');\n\nform.addEventListener('submit', generatorOn)\n\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      }\n      reject({ position, delay });\n    }, delay);\n  });\n\n}\n\nfunction generatorOn(evt) {\n  evt.preventDefault();\nlet delayValue = Number(delayForm.value)\nconst stepValue = Number(stepForm.value)\nconst amountValue = Number(amountForm.value)\n  for (let i = 1; i < amountValue + 1; i += 1) {\n    createPromise(i, delayValue)\n      .then(({ position, delay}) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n        console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n        console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n    delayValue += stepValue;\n  }\n  console.log(delayValue);\n  console.log(stepValue);\n  console.log(amountValue);\n}\n\n// createPromise(2, 1500)\n  // .then(({ position, delay }) => {\n  //   console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  // })\n  // .catch(({ position, delay }) => {\n  //   console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n  // });"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$form","document","querySelector","$ce04d3a99e08e73b$var$delayForm","$ce04d3a99e08e73b$var$stepForm","$ce04d3a99e08e73b$var$amountForm","$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","addEventListener","evt","preventDefault","delayValue","Number","value","stepValue","amountValue","i","then","param","Notify","success","concat","console","log","catch","failure"],"version":3,"file":"03-promises.c4f0ef48.js.map"}