{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAOC,SAASC,cAAc,SAC9BC,EAAYF,SAASC,cAAc,kBACnCE,EAAWH,SAASC,cAAc,iBAClCG,EAAaJ,SAASC,cAAc,mBAK1C,SAASI,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACLN,GACFI,EAAQ,C,SAAEN,E,MAAUC,IAEtBM,EAAO,C,SAAEP,E,MAAUC,MAClBA,MAXPR,EAAKgB,iBAAiB,UAgBtB,SAAqBC,GACnBA,EAAIC,iBACN,IAAIC,EAAaC,OAAOjB,EAAUkB,OAClC,MAAMC,EAAYF,OAAOhB,EAASiB,OAC5BE,EAAcH,OAAOf,EAAWgB,OACpC,IAAK,IAAIG,EAAI,EAAGA,EAAID,EAAc,EAAGC,GAAK,EACxClB,EAAckB,EAAGL,GACdM,MAAK,EAAClB,SAAEA,EAAQC,MAAEA,MACjBV,EAAA4B,OAAOC,QAAQ,uBAAqBpB,QAAiBC,OACnDoB,QAAMC,IAAI,uBAAqBtB,QAAiBC,UAEnDsB,OAAM,EAACvB,SAAEA,EAAQC,MAAEA,MAClBV,EAAA4B,OAAOK,QAAQ,sBAAoBxB,QAAiBC,OAClDoB,QAAMC,IAAI,sBAAoBtB,QAAiBC,UAErDW,GAAcG,EAEhBM,QAAQC,IAAIV,GACZS,QAAQC,IAAIP,GACZM,QAAQC,IAAIN","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst form = document.querySelector('.form');\nconst delayForm = document.querySelector('[name=\"delay\"]');\nconst stepForm = document.querySelector('[name=\"step\"]');\nconst amountForm = document.querySelector('[name=\"amount\"]');\n\nform.addEventListener('submit', generatorOn)\n\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      }\n      reject({ position, delay });\n    }, delay);\n  });\n\n}\n\nfunction generatorOn(evt) {\n  evt.preventDefault();\nlet delayValue = Number(delayForm.value)\nconst stepValue = Number(stepForm.value)\nconst amountValue = Number(amountForm.value)\n  for (let i = 1; i < amountValue + 1; i += 1) {\n    createPromise(i, delayValue)\n      .then(({ position, delay}) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n        console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n        console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n    delayValue += stepValue;\n  }\n  console.log(delayValue);\n  console.log(stepValue);\n  console.log(amountValue);\n}\n\n// createPromise(2, 1500)\n  // .then(({ position, delay }) => {\n  //   console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  // })\n  // .catch(({ position, delay }) => {\n  //   console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n  // });"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$form","document","querySelector","$47d4ff9957288465$var$delayForm","$47d4ff9957288465$var$stepForm","$47d4ff9957288465$var$amountForm","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","addEventListener","evt","preventDefault","delayValue","Number","value","stepValue","amountValue","i","then","Notify","success","console","log","catch","failure"],"version":3,"file":"03-promises.fa86c622.js.map"}